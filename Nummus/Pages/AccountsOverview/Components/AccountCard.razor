@using Nummus.Service
@using Nummus.Data
@inject FormatService FormatService
@inject IAccountService AccountService
@inject IMatDialogService MatDialogService
@inject IBookingLineService BookingLineService
<div class="account-card">
    <div class="flex flex-space-between">
        <div>
            <MatHeadline6 class="margin-1">@AccountName</MatHeadline6>
        </div>
        <div class="flex flex-align-center">
            <MatIconButton Class="force-white-text margin-right"
                           OnClick="@OpenBookingLineDialog">
                <MatIcon Icon="add_box"/>
            </MatIconButton>
        </div>
    </div>
    <div class="flex flex-space-between">
        <div>
            <MatSubtitle2 Class="margin-left-1 margin-top-0">
                @FormatService.FormatToLocalCurrency(AccountService.GetCurrentAccountBalance(AccountId))
            </MatSubtitle2>
        </div>
        <div class="flex flex-align-center">
            <MatIconButton Class="force-white-text margin-right"
                       OnClick="@ToggleTransactions">
                
                @if (_showTransactions) {
                    <MatIcon Icon="keyboard_arrow_up" />
                } else {
                    <MatIcon Icon="keyboard_arrow_down" />
                }
            </MatIconButton>
        </div>
    </div>
    @if (_showTransactions) {
        <MatDivider />
        @foreach (var bookingLine in _bookingLines) {
            <div class="flex  flex-space-between">
                <div>
                    @bookingLine.BookingTime
                </div>
                <div>
                    @bookingLine.BookingText
                </div>
                <div>
                    @FormatService.FormatToLocalCurrency(bookingLine.Amount)
                </div>
            </div>
        }
    }
</div>

<MatDialog IsOpen="@_addBookingLineDialogOpen">
    <MatDialogTitle Class="force-white-text">Add Booking Line</MatDialogTitle>
    <MatDialogContent>
        <div class="margin-1">
            <MatTextField @bind-Value="@_newBookingLine.BookingText" Label="Booking line text" />
        </div>
        <div class="margin-1">
            <MatTextField @bind-Value="@_newBookingLine.Amount" TValue="decimal" Label="Booking line amount" />
        </div>
        <div class="margin-1">
            <MatDatePicker @bind-Value="@_newBookingLine.BookingTime" EnableTime="true" />
        </div>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@CloseBookingLineDialog">Cancel</MatButton>
        <MatButton OnClick="@SaveBookingLine">Save</MatButton>
    </MatDialogActions>
</MatDialog>

@code {
    [Parameter]
    public int AccountId { get; set; }
    
    [Parameter]
    public string AccountName { get; set; }

    private const int PageSize = 10;

    private bool _addBookingLineDialogOpen;
    private bool _showTransactions;
    private int _currentTransactionsPage = 0;
    private int _pagesCount = 0;
    private BookingLine[] _bookingLines = {};
    private BookingLine _newBookingLine = new BookingLine();

    void OpenBookingLineDialog() {
        _addBookingLineDialogOpen = true;
    }

    void ToggleTransactions() {
        _showTransactions = !_showTransactions;
    }

    void CloseBookingLineDialog() {
        _newBookingLine = new BookingLine();
        _addBookingLineDialogOpen = false;
    }

    void LoadPage(int pageNumber) {
        _bookingLines = BookingLineService.GetBookingLinesPaged(AccountId, PageSize, pageNumber);
        _currentTransactionsPage = pageNumber;
    }

    void SaveBookingLine() {
        BookingLineService.CreateBookingLine(AccountId, _newBookingLine);
        LoadPage(_currentTransactionsPage);
        CloseBookingLineDialog();
    }

    protected override void OnInitialized() {
        base.OnInitialized();
        LoadPage(_currentTransactionsPage);
    }

}
